//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeresyAuthService.InternalHeresyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InternalHeresyService.IInternalHeresyService")]
    public interface IInternalHeresyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeresyService/GetCharacterList", ReplyAction="http://tempuri.org/IHeresyService/GetCharacterListResponse")]
        System.Collections.Generic.Dictionary<string, HeresyCore.Entities.Character> GetCharacterList(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeresyService/GetCharacterList", ReplyAction="http://tempuri.org/IHeresyService/GetCharacterListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, HeresyCore.Entities.Character>> GetCharacterListAsync(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalHeresyService/RegisterUser", ReplyAction="http://tempuri.org/IInternalHeresyService/RegisterUserResponse")]
        void RegisterUser(string id, string appSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalHeresyService/RegisterUser", ReplyAction="http://tempuri.org/IInternalHeresyService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(string id, string appSecret);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInternalHeresyServiceChannel : HeresyAuthService.InternalHeresyService.IInternalHeresyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InternalHeresyServiceClient : System.ServiceModel.ClientBase<HeresyAuthService.InternalHeresyService.IInternalHeresyService>, HeresyAuthService.InternalHeresyService.IInternalHeresyService {
        
        public InternalHeresyServiceClient() {
        }
        
        public InternalHeresyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InternalHeresyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalHeresyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalHeresyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, HeresyCore.Entities.Character> GetCharacterList(HeresyCore.Entities.Token token) {
            return base.Channel.GetCharacterList(token);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, HeresyCore.Entities.Character>> GetCharacterListAsync(HeresyCore.Entities.Token token) {
            return base.Channel.GetCharacterListAsync(token);
        }
        
        public void RegisterUser(string id, string appSecret) {
            base.Channel.RegisterUser(id, appSecret);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(string id, string appSecret) {
            return base.Channel.RegisterUserAsync(id, appSecret);
        }
    }
}
