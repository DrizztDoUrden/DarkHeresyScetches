//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTester.HeresyInternalAuthService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HeresyInternalAuthService.IInternalAuthService")]
    public interface IInternalAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Register", ReplyAction="http://tempuri.org/IAuthService/RegisterResponse")]
        bool Register(string loginHash, string passHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Register", ReplyAction="http://tempuri.org/IAuthService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string loginHash, string passHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Login", ReplyAction="http://tempuri.org/IAuthService/LoginResponse")]
        HeresyCore.Entities.Token Login(string loginHash, string passHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Login", ReplyAction="http://tempuri.org/IAuthService/LoginResponse")]
        System.Threading.Tasks.Task<HeresyCore.Entities.Token> LoginAsync(string loginHash, string passHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Logout", ReplyAction="http://tempuri.org/IAuthService/LogoutResponse")]
        bool Logout(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Logout", ReplyAction="http://tempuri.org/IAuthService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsLogged", ReplyAction="http://tempuri.org/IAuthService/IsLoggedResponse")]
        bool IsLogged(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsLogged", ReplyAction="http://tempuri.org/IAuthService/IsLoggedResponse")]
        System.Threading.Tasks.Task<bool> IsLoggedAsync(HeresyCore.Entities.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalAuthService/GetId", ReplyAction="http://tempuri.org/IInternalAuthService/GetIdResponse")]
        string GetId(HeresyCore.Entities.Token token, string appSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalAuthService/GetId", ReplyAction="http://tempuri.org/IInternalAuthService/GetIdResponse")]
        System.Threading.Tasks.Task<string> GetIdAsync(HeresyCore.Entities.Token token, string appSecret);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInternalAuthServiceChannel : ServiceTester.HeresyInternalAuthService.IInternalAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InternalAuthServiceClient : System.ServiceModel.ClientBase<ServiceTester.HeresyInternalAuthService.IInternalAuthService>, ServiceTester.HeresyInternalAuthService.IInternalAuthService {
        
        public InternalAuthServiceClient() {
        }
        
        public InternalAuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InternalAuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalAuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalAuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string loginHash, string passHash) {
            return base.Channel.Register(loginHash, passHash);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string loginHash, string passHash) {
            return base.Channel.RegisterAsync(loginHash, passHash);
        }
        
        public HeresyCore.Entities.Token Login(string loginHash, string passHash) {
            return base.Channel.Login(loginHash, passHash);
        }
        
        public System.Threading.Tasks.Task<HeresyCore.Entities.Token> LoginAsync(string loginHash, string passHash) {
            return base.Channel.LoginAsync(loginHash, passHash);
        }
        
        public bool Logout(HeresyCore.Entities.Token token) {
            return base.Channel.Logout(token);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(HeresyCore.Entities.Token token) {
            return base.Channel.LogoutAsync(token);
        }
        
        public bool IsLogged(HeresyCore.Entities.Token token) {
            return base.Channel.IsLogged(token);
        }
        
        public System.Threading.Tasks.Task<bool> IsLoggedAsync(HeresyCore.Entities.Token token) {
            return base.Channel.IsLoggedAsync(token);
        }
        
        public string GetId(HeresyCore.Entities.Token token, string appSecret) {
            return base.Channel.GetId(token, appSecret);
        }
        
        public System.Threading.Tasks.Task<string> GetIdAsync(HeresyCore.Entities.Token token, string appSecret) {
            return base.Channel.GetIdAsync(token, appSecret);
        }
    }
}
